(* ::Package:: *)

(* ::Input:: *)
(*GetSIBaseValue[constant_]:=QuantityMagnitude[UnitConvert[Quantity[constant],"SIBase"]];*)
(*PlanetList={"Mercury","Venus","Earth","Mars","Jupiter","Saturn","Uranus","Neptune"};*)
(*GetCelestialData[celestialName_]:=*)
(*{celestialName,*)
(*PlanetData[celestialName, "Color"],*)
(*GetSIBaseValue@PlanetData[celestialName, "Radius"],*)
(*GetSIBaseValue@PlanetData[celestialName,"Mass"]*GetSIBaseValue@"GravitationalConstant",*)
(*GetSIBaseValue@PlanetData[celestialName,"SemimajorAxis"],*)
(*PlanetData[celestialName,"Eccentricity"],*)
(*GetSIBaseValue@PlanetData[celestialName,"PeriapsisArgument"],*)
(*GetSIBaseValue@PlanetData[celestialName,"AscendingNodeLongitude"],*)
(*GetSIBaseValue@PlanetData[celestialName,"Inclination"],*)
(*GetSIBaseValue@PlanetData[celestialName,"MeanAnomaly"]};*)
(*GetPlanetaryMoonData[celestialName_]:=*)
(*{celestialName,*)
(*PlanetaryMoonData[celestialName, "Color"],*)
(*GetSIBaseValue@PlanetaryMoonData[celestialName, "Radius"],*)
(*GetSIBaseValue@PlanetaryMoonData[celestialName,"Mass"]*GetSIBaseValue@"GravitationalConstant",*)
(*GetSIBaseValue@PlanetaryMoonData[celestialName,"SemimajorAxis"],*)
(*PlanetaryMoonData[celestialName,"Eccentricity"],*)
(*GetSIBaseValue@PlanetaryMoonData[celestialName,"PeriapsisArgument"],*)
(*GetSIBaseValue@PlanetaryMoonData[celestialName,"AscendingNodeLongitude"],*)
(*GetSIBaseValue@PlanetaryMoonData[celestialName,"Inclination"],*)
(*GetSIBaseValue@PlanetaryMoonData[celestialName,"EccentricAnomaly"]-PlanetaryMoonData[celestialName,"Eccentricity"]Sin[GetSIBaseValue@PlanetaryMoonData[celestialName,"EccentricAnomaly"]]};*)
(**)
(**)
(*EccentricAnomaly[ma_,e_,\[Epsilon]_,countMax_,ini_]:= *)
(*Module[*)
(*{xOld=ma+1000,x=ma,count=0,x1,x2},*)
(*While[Abs[x-xOld]>\[Epsilon]&& count<countMax,*)
(*xOld=x;*)
(*If[count<ini,*)
(*x1=ma+e*Sin@x; x2=ma+e*Sin@x1;x=(x1+x2)*0.5,*)
(*x+=(ma-x+e*Sin@x)/(1.-e*Cos@x)];*)
(*count++];*)
(*x];*)
(**)
(*KeplerianToCartesianFast[\[Mu]_,a_,e_,\[Omega]_,\[CapitalOmega]_,i_,M_,t_]:=*)
(*Module[*)
(*{Mt,EA,\[Nu],rct},*)
(*Mt=Mod[M+t Sqrt[\[Mu]/a^3],2Pi];*)
(*EA=EccentricAnomaly[Mt,e,10^-9,500,2];*)
(*\[Nu]=2ArcTan[Sqrt[(1+e)/(1-e)]Tan[0.5EA]]+2Pi;*)
(*rct=a(1-e Cos@EA);*)
(*{rct (Cos[\[Nu]+\[Omega]] Cos[\[CapitalOmega]]-Cos[i] Sin[\[Nu]+\[Omega]] Sin[\[CapitalOmega]]),*)
(*rct (Cos[i] Cos[\[CapitalOmega]] Sin[\[Nu]+\[Omega]]+Cos[\[Nu]+\[Omega]] Sin[\[CapitalOmega]]),*)
(*rct Sin[i] Sin[\[Nu]+\[Omega]]}];*)
(**)
(*FormTrail[\[Mu]_,a_,e_,\[Omega]_,\[CapitalOmega]_,i_,pointNum_]:=*)
(*Module[{delay},*)
(*ExpDistribute0to2Pi[x_] :=*)
(*Module[{},*)
(*If[e>=0.1,*)
(*If[x<=Pi,*)
(*Pi ((1+((e+1)^5-1)/15)^x-1)/((1+((e+1)^5-1)/15)^Pi-1),*)
(*Pi+Pi ((1+((e+1)^5-1)/15)^(Pi-x)-1)/((1+((e+1)^5-1)/15)^(-Pi)-1)*)
(*],*)
(*x*)
(*]*)
(*];*)
(*pointNum=10;*)
(*delay=2Pi/pointNum;*)
(*trail=Table[0,pointNum+1,3];*)
(*For[j=0,j<=pointNum,j++,*)
(*trail[[j+1]]=KeplerianToCartesianFast[\[Mu],a,e,\[Omega],\[CapitalOmega],i,ExpDistribute0to2Pi[j delay] ,0]*)
(*];*)
(*trail[[pointNum+1]]=trail[[1]];*)
(*trail*)
(*];*)
(**)


(* ::Input:: *)
(*plotRange = {{-5*10^12,5*10^12},{-5*10^12,5*10^12},{-5*10^11,5*10^11}};*)
(*plotRangeConst={plotRange[[1,2]],plotRange[[2,2]],plotRange[[3,2]]};*)
(**)
(*CelestialData = {};*)
(*AppendTo[CelestialData,*)
(*{"Sun",StarData["Sun","Color"],GetSIBaseValue@StarData["Sun","Radius"],*)
(*GetSIBaseValue@"SolarMass"*GetSIBaseValue@"GravitationalConstant",0,0,0,0,0,0,0,0}];*)
(*Do[AppendTo[CelestialData,Flatten[Append[GetCelestialData[PlanetList[[i]]],{1,1}]]],{i,Length@PlanetList}];*)
(*AppendTo[CelestialData,Flatten[Append[GetPlanetaryMoonData["Moon"],{1,4}]]];*)
(**)
(*DynamicModule[*)
(*{t=0,simSpeed=2*24*3600,calcRate=10,viewSelector=1,viewCenter={0,0,0}},*)
(*Grid[{{Do[*)
(*CartesianCoordsList[[i]]=With[{i=i},*)
(*Dynamic[KeplerianToCartesianFast[*)
(*CelestialData[[CelestialData[[i,12]],4]],*)
(*Sequence@@CelestialData[[i,5;;10]],*)
(*t]]];*)
(*If[CelestialData[[i,12]]>1,*)
(*Do[trailData[[i-1,j]]=*)
(*With[{i=i,j=j},Dynamic[trailData[[i-1,j]]]]+CartesianCoordsList[[CelestialData[[i,12]]]],*)
(*{j,1,Length@trailData[[i-1]]}];*)
(*CartesianCoordsList[[i]]+=With[{i=i},*)
(*Dynamic[KeplerianToCartesianFast[*)
(*CelestialData[[CelestialData[[CelestialData[[i,12]],12]],4]],*)
(*Sequence@@CelestialData[[CelestialData[[i,12]],5;;10]],*)
(*t]]]],*)
(*{i,2,Length@CelestialData}];*)
(*Graphics3D[{*)
(*RGBColor[CelestialData[[1,2,2,2]]],*)
(*Sphere[{0,0,0},CelestialData[[1,3]]],*)
(*Text[CelestialData[[1,1]],{0,0,0},{0,-1}],*)
(*Sequence@@Flatten@Table[{*)
(*RGBColor[CelestialData[[i,2,2,2]]],*)
(*Sphere[*)
(*CartesianCoordsList[[i]],*)
(*CelestialData[[i,3]]],*)
(*Point[*)
(*CartesianCoordsList[[i]]],*)
(*Text[*)
(*CelestialData[[i,1]],*)
(*CartesianCoordsList[[i]],*)
(*{0,-1}]},*)
(*{i,2,Length@CelestialData}],*)
(*Gray,Line[trailData]*)
(*},*)
(*SphericalRegion->True,*)
(*ViewAngle->0.1,*)
(*ViewPoint->{1.3,-2.4,0.7},*)
(*(*ViewCenter\[Rule]Dynamic[viewCenter,viewCenter=(KeplerianToCartesianFast[*)
(*CelestialData[[CelestialData[[viewSelector+1,12]],4]],*)
(*Sequence@@CelestialData[[viewSelector+1,5;;10]],*)
(*t]+plotRangeConst)/(2plotRangeConst)],*)*)
(*PlotRange->plotRange,*)
(*Axes->False,*)
(*Boxed->False,*)
(*ImageSize->{1200,500},*)
(*RotationAction->"Clip",*)
(*Background->Black*)
(*],SpanFromLeft},*)
(*{"Time",Animator[Dynamic[t],{0,60000*86400,Dynamic[simSpeed/calcRate]},AnimationRate->Dynamic[simSpeed],Appearance->"Labeled"]},*)
(*{"Simulation Speed",InputField[Dynamic[simSpeed],Number]},*)
(*{"Calculation Rate",InputField[Dynamic[calcRate],Number]},*)
(*{"View Selector",Slider[Dynamic[viewSelector],{0,8,1},Appearance->"Labeled"]}}],*)
(*Initialization:>( *)
(*CartesianCoordsList=Table[0,Length@CelestialData,3];*)
(*trailData={};*)
(*For[i=2,i<=Length@CelestialData,i++,*)
(*If[CelestialData[[i,11]]==1,*)
(*AppendTo[trailData,*)
(*FormTrail[*)
(*CelestialData[[CelestialData[[i,12]],4]],*)
(*Sequence@@CelestialData[[i,5;;9]],50]*)
(*]*)
(*]*)
(*])*)
(*]*)
(**)
